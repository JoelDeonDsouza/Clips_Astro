---
import Layout from "../layouts/Layout.astro";
import { db } from "../db";
import { CldUploadWidget } from "astro-cloudinary";
import { CloudUpload } from "lucide-react";
import { eq } from "drizzle-orm";
import { postLikes, userPost } from "../db/schema";
const currentUser = Astro.locals.user;
import Post from "../components/post.astro";

const posts = await db.query.userPost.findMany({
  where: eq(userPost.userId, currentUser?.id!),
  with: { likes: true, comments: true, user: true },
});

const likes = await db.query.postLikes.findMany({
  where: eq(postLikes.userId, currentUser?.id!),
  with: {
    user: true,
    post: {
      with: {
        user: true,
        likes: true,
        comments: true,
      },
    },
  },
});

const structuredLikes = likes.map((like) => {
  return {
    ...like.post,
    likes: like.post.likes,
    user: like.post.user,
  };
});
---

<Layout>
  <main>
    <section class="flex flex-col items-center gap-2">
      <img
        src={currentUser?.image}
        alt="ProfileImgCurrentUser"
        class="w-28 rounded-full pb-2"
      />
      <h1 class="text-1xl text-base-content font-bold brightness-125">
        Welcome back, {currentUser?.name}
      </h1>
      <CldUploadWidget
        uploadPreset="clip_astro"
        id="upload-events"
        signatureEndpoint={"/api/signed"}
      >
        <button class="btn btn-primary">
          <div class="flex items-center gap-2">
            <span>Upload</span>
            <CloudUpload size="24" />
          </div>
        </button>
      </CldUploadWidget>
    </section>
    <section class="card">
      <h2 class="pb-4 text-3xl">My posts</h2>
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
        {
          posts.length === 0 ? (
            <p>Not posts uploaded</p>
          ) : (
            posts.map((post) => (
              <Post imgData={post} currentUser={currentUser} />
            ))
          )
        }
      </div>
    </section>
    <section class="card">
      <h2 class="pb-4 text-3xl pt-10">My liked posts</h2>
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
        {
          likes.length === 0 ? (
            <p class="pb-10">No liked posts</p>
          ) : (
            structuredLikes.map((post) => (
              <Post imgData={post} currentUser={currentUser} />
            ))
          )
        }
      </div>
    </section>
  </main>
</Layout>

<script>
  import { actions } from "astro:actions";

  const widget = document.querySelector("#upload-events");
  if (widget) {
    widget.addEventListener("clduploadwidget:success", async (event) => {
      // @ts-ignore
      const imageUrl = event.detail.info.public_id as string;
      // @ts-ignore
      const format = event.detail.info.format as string;
      const { data, error } = await actions.addImage({
        format,
        publicId: imageUrl,
      });
      if (error) {
        console.log(error);
      }
      if (data) {
        console.log(data);
        window.location.href = "/dashboard";
      }
    });
  }
</script>
